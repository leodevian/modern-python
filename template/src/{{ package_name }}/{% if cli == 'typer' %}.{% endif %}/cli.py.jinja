"""This module contains the command-line interface."""

from __future__ import annotations

from typing import Annotated

import typer
from rich.console import Console

from {{ package_name }}.__version__ import __version__

console = Console()

app = typer.Typer(context_settings={"help_option_names": ["-h", "--help"]})


def show_version(value: bool) -> None:  # noqa: FBT001
    """Show the version and exit.

    Args:
        value: A boolean indicating whether to show the version and exit.
    """
    if value:
        console.print(
            f"{{ distribution_name }}, version {__version__}",
            highlight=False,
        )
        raise typer.Exit(0)


@app.command()
def main(
    version: Annotated[  # noqa: ARG001, FBT002
        bool,
        typer.Option(
            "-V",
            "--version",
            callback=show_version,
            is_eager=True,
            help="Show the version and exit.",
        ),
    ] = False,
) -> None:
    """Run the main program."""
    return


if __name__ == "__main__":
    app()
